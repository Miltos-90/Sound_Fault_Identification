import numpy as np


data=np.array([-41.9916,-41.4257,-41.1167,-42.4572,-43.9944,-41.3271,-38.5962,-38.2775,-41.1866,-46.4039,-39.6208,-35.4904,-34.7760,-37.7190,-48.2509,-37.3811,-32.1358,-30.9091,-33.2899,-45.2069,-35.0693,-28.7171,-27.0138,-28.8600,-38.4350,-33.8920,-26.8330,-25.8648,-29.9642,-47.4503,-37.1845,-16.7615,-5.6853,2.1884,8.3151,13.2857,17.4034,20.8454,23.7247,26.1176,28.0772,29.6416,30.8378,31.6849,32.1957,32.3774,32.2326,31.7591,30.9502,29.7937,28.2713,26.3570,24.0144,21.1926,17.8193,13.7878,8.9319,2.9700,-4.6413,-15.2328,-34.7749,-45.4057,-32.7289,-26.8648,-26.7361,-31.3755,-44.2577,-31.7745,-28.5614,-28.9750,-32.3737,-39.8351,-38.1240,-33.1660,-32.1419,-37.7510,-29.9458,-17.6387,-9.8438,-3.8398,1.0642,5.1618,8.6122,11.5148,13.9370,15.9269,17.5197,18.7413,19.6106,20.1407,20.3394,20.2104,19.7524,18.9596,17.8210,16.3193,14.4295,12.1164,9.3303,5.9997,2.0187,-2.7798,-8.6833,-16.2670,-27.0613,-51.9037,-48.5910,-47.3393,-38.6429,-37.2932,-40.0716,-49.2688,-46.5544,-40.9142,-39.8070,-41.2601,-45.1021,-49.6047,-45.8119,-42.7550,-46.1558,-38.0694,-25.5210,-17.4446,-11.2662,-6.2564,-2.0934,1.3993,4.3314,6.7764,8.7859,10.3971,11.6370,12.5248,13.0737,13.2919,13.1824,12.7442,11.9713,10.8528,9.3715,7.5028,5.2123,2.4516,-0.8482,-4.7890,-9.5297,-15.3409,-22.7534,-33.1282,-54.2722,-55.0041,-58.4744,-47.0508,-45.0824,-47.2597,-54.7521,-56.5102,-49.6899,-47.8935,-48.4950,-50.9479,-55.3909,-55.3624,-50.9343,-53.8174,-43.5632,-31.0555,-22.8742,-16.6054,-11.5272,-7.3124,-3.7796,-0.8154,1.6563,3.6889,5.3209,6.5800,7.4864,8.0535,8.2898,8.1988,7.7794,7.0261,5.9279,4.4680,2.6221,0.3561,-2.3775,-5.6466,-9.5506,-14.2439,-19.9871,-27.2835,-37.3847,-56.6893,-60.5423,-63.8682,-52.3669,-50.2440,-52.2123,-58.7133,-61.1722,-55.1511,-53.2426,-53.4438,-55.1234,-58.7448,-60.8910,-56.1525,-58.9683,-48.4162,-35.4660,-27.1454,-20.7967,-15.6631,-11.4061,-7.8387,-4.8449,-2.3470,-0.2907,1.3631,2.6428,3.5686,4.1545,4.4090,4.3362,3.9351,3.2005,2.1219,0.6827,-1.1406,-3.3815,-6.0866,-9.3224,-13.1864,-17.8294,-23.5055,-30.7041,-40.6349,-59.3047,-62.8943,-67.3289,-56.3882,-53.8845,-55.3874,-60.5372,-63.6812,-58.9856,-56.9215,-56.6837,-57.6662,-60.4047,-63.7636,-59.7826,-61.5254,-52.9365,-39.2646,-30.7381,-24.2869,-19.0903,-14.7888,-11.1871,-8.1646,-5.6417,-3.5625,-1.8873,-0.5873,0.3581,0.9631,1.2364,1.1821,0.7997,0.0839,-0.9754,-2.3943,-4.1959,-6.4128,-9.0905,-12.2938,-16.1172,-20.7070,-26.3079,-33.3884,-43.0923,-60.8649,-65.2538,-71.1644,-60.3197,-57.2516,-58.3075,-62.7541,-66.7482,-62.7208,-60.3954,-59.8182,-60.3573,-62.5569,-66.5568,-63.5120,-64.2298,-56.5112,-42.5342,-33.8520,-27.3051,-22.0421,-17.6913,-14.0509,-10.9969,-8.4470,-6.3442,-4.6477,-3.3279,-2.3637,-1.7405,-1.4491,-1.4851,-1.8489,-2.5452,-3.5841,-4.9812,-6.7596,-8.9516,-11.6028,-14.7779,-18.5712,-23.1281,-28.6883,-35.6961,-45.1534,-60.5266,-76.8782,-69.7159,-60.7129,-59.1925,-62.2965,-76.0030,-66.1688,-61.2482,-60.9393,-64.0675,-74.0507,-71.9781,-65.5692,-64.5822,-66.8841,-74.2079,-78.7752,-70.1094,-68.2220,-69.6576,-75.1043,-84.7971,-74.6102,-71.6949,-72.2808,-76.2956,-85.9762,-79.0852,-75.0323,-74.7770,-77.6253,-85.0084,-83.4605,-78.2920,-77.1897,-79.0345,-84.4797,-87.2236,-81.5195,-79.5613,-80.5029,-84.4679,-89.3518,-84.7167,-81.9283,-82.0269,-84.8109,-89.7770,-87.7809,-84.3193,-83.6113,-85.3997,-89.5745,-90.4109,-86.7475,-85.2647,-86.1719,-89.4005,-92.1631,-89.1951,-86.9976,-87.0928,-89.4226,-92.8974,-91.5782,-88.8201,-88.1441,-89.6494,-92.9904,-93.7001,-90.7367,-89.3176,-90.0584,-92.8847,-95.2674,-92.7371,-90.6118,-90.6271,-92.8168,-96.0924,-94.7754,-92.0293,-91.3391,-92.8717,-96.3020,-96.7339,-93.5745,-92.1847,-93.0698,-96.2031,-98.3926,-95.2489,-93.1593,-93.4093,-96.0407,-99.4901,-97.0428,-94.2626,-93.8833,-95.9411,-99.9304,-98.9161,-95.4975,-94.4850,-95.9539,-99.8872,-100.7621,-96.8690,-95.2097,-96.0932,-99.6310,-102.3674,-98.3815,-96.0552,-96.3590,-99.3562,-103.4470,-100.0338,-97.0212,-96.7464,-99.1591,-103.8489,-101.8063,-98.1091,-97.2497,-99.0763,-103.7157,-103.6350,-99.3213,-97.8632,-99.1156,-103.3306,-105.3659,-100.6595,-98.5814,-99.2725,-102.9086,-106.7276,-102.1218,-99.3988,-99.5371,-102.5548,-107.4403,-103.6963,-100.3092,-99.8969, -102.3045, -107.4683, -105.3482, -101.3046, -100.3373, -102.1579,-107.0516,-106.9965, -102.3743, -100.8417, -102.0996, -106.4599, -108.4816, -103.5038, -101.3912, -102.1062, -105.8475, -109.5622, -104.6745, -101.9658, -102.1514, -105.2684, -110.0167, -105.8623, -102.5457, -102.2083, -104.7241, -109.8140, -107.0360, -103.1146, -102.2534, -104.1961, -109.1226, -108.1493, -103.6640, -102.2704])

def qint(ym1, y0, yp1):
    #QINT   Quadratic interpolation of 3 uniformly spaced samples
    #
    #               [p,y,a] = qint(ym1,y0,yp1)
    #
    #       returns extremum-location p, height y, and half-curvature a
    #       of a parabolic fit through three points.
    #       The parabola is given by y(x) = a*(x-p)^2+b,
    #       where y(-1)=ym1, y(0)=y0, y(1)=yp1.

    p = (yp1 - ym1) / (2 * (2 * y0 - yp1 - ym1))
    y = y0 - 0.25 * (ym1 - yp1) * ps
    a = 0.5 * (ym1 - 2 * y0 + yp1)

    return p, y, a


a = np.stack((data, data), axis = 0)[..., None]
axis = 1

outShape = list(a.shape)
outShape[axis] = 1

xi = np.argmax(a, axis = axis, keepdims = True)
yi = np.take_along_axis(a, xi, axis = axis)
hc = np.zeros(shape = outShape)


interiorMaxima = (xi > 0) & (xi < a.shape[axis]) # Only support interior maxima

aInterior = a[np.nonzero(interiorMaxima)]
xiInterior = xi[interiorMaxima]
yiInterior = yi[interiorMaxima]

xdelta, yij, cj = qint(
    ym1 = np.take_along_axis(aInterior, xiInterior - 1, axis),
    yp1 = np.take_along_axis(aInterior, xiInterior + 1, axis),
    y0  = y
)

#return xi, yi, hc